#!/usr/bin/env python
import os


def configure(conf):
    AR32 = ['i386', 'i586', 'i686']
    AR64 = ['x86_64', 'amd64']
    TC = ['mingw32', 'mingw32msvc', 'w64-mingw32']

    found = False

    for a in AR32:
        for t in TC:
            if conf.find_program(a + '-' + t + '-gcc', var='WINEXE_CC_WIN32'):
                found = True
                break
        if found:
            conf.DEFINE('HAVE_WINEXE_CC_WIN32', 1);
            break

    found = False

    for a in AR64:
        for t in TC:
            if conf.find_program(a + '-' + t + '-gcc', var='WINEXE_CC_WIN64'):
                found = True
                break
        if found:
            conf.DEFINE('HAVE_WINEXE_CC_WIN64', 1);
            break

    source_date_epoch = os.environ.get('SOURCE_DATE_EPOCH')
    if source_date_epoch is None:
        # We set the timestamp to be 0, which makes the winexe build
        # reproducible. According to
        # https://learn.microsoft.com/en-us/windows/win32/debug/pe-format
        #
        # > If the stamp value is 0 or 0xFFFFFFFF, it does not
        # > represent a real or meaningful date/time stamp.

        source_date_epoch = '0'

    conf.env.SOURCE_DATE_EPOCH = source_date_epoch
    conf.DEFINE("WINEXE_LDFLAGS",
                "-s -Wall -Wl,-Bstatic -Wl,-Bdynamic -luserenv")
